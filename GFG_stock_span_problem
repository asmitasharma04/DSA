import java.util.*;

class Solution {
    public ArrayList<Integer> calculateSpan(int[] arr) {
        int n = arr.length;
        ArrayList<Integer> span = new ArrayList<>();
        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < n; i++) {
            // Maintain decreasing order in stack
            while (!stack.isEmpty() && arr[stack.peek()] <= arr[i]) {
                stack.pop();
            }

            // Compute span
            int currentSpan = stack.isEmpty() ? (i + 1) : (i - stack.peek());
            span.add(currentSpan);

            // Push current index onto stack
            stack.push(i);
        }

        return span;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] prices = {100, 80, 60, 70, 60, 75, 85};
        System.out.println(solution.calculateSpan(prices)); // Output: [1, 1, 1, 2, 1, 4, 6]

        int[] prices2 = {10, 4, 5, 90, 120, 80};
        System.out.println(solution.calculateSpan(prices2)); // Output: [1, 1, 2, 4, 5, 1]
    }
}
