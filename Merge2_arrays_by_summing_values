import java.util.*;

public class MergeArrays {
    public static int[][] mergeArrays(int[][] nums1, int[][] nums2) {
        List<int[]> result = new ArrayList<>();
        int i = 0, j = 0;
        
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i][0] == nums2[j][0]) {
                // Ids are the same, add values and move both pointers
                result.add(new int[] {nums1[i][0], nums1[i][1] + nums2[j][1]});
                i++;
                j++;
            } else if (nums1[i][0] < nums2[j][0]) {
                // Id in nums1 is smaller, add nums1 element and move nums1 pointer
                result.add(new int[] {nums1[i][0], nums1[i][1]});
                i++;
            } else {
                // Id in nums2 is smaller, add nums2 element and move nums2 pointer
                result.add(new int[] {nums2[j][0], nums2[j][1]});
                j++;
            }
        }
        
        // Append remaining elements of nums1
        while (i < nums1.length) {
            result.add(new int[] {nums1[i][0], nums1[i][1]});
            i++;
        }
        
        // Append remaining elements of nums2
        while (j < nums2.length) {
            result.add(new int[] {nums2[j][0], nums2[j][1]});
            j++;
        }
        
        // Convert the list to a 2D array
        int[][] mergedArray = new int[result.size()][2];
        for (int k = 0; k < result.size(); k++) {
            mergedArray[k] = result.get(k);
        }
        
        return mergedArray;
    }
    
    public static void main(String[] args) {
        int[][] nums1 = { {1, 2}, {2, 3}, {4, 5} };
        int[][] nums2 = { {1, 4}, {3, 2}, {4, 1} };
        System.out.println(Arrays.deepToString(mergeArrays(nums1, nums2)));  // Output: [[1, 6], [2, 3], [3, 2], [4, 6]]
        
        int[][] nums1_2 = { {2, 4}, {3, 6}, {5, 5} };
        int[][] nums2_2 = { {1, 3}, {4, 3} };
        System.out.println(Arrays.deepToString(mergeArrays(nums1_2, nums2_2)));  // Output: [[1, 3], [2, 4], [3, 6], [4, 3], [5, 5]]
    }
}
