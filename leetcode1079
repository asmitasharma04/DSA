import java.util.HashSet;
import java.util.Set;

class Solution {
    public int numTilePossibilities(String tiles) {
        Set<String> sequences = new HashSet<>();
        int[] counter = new int[26];
        for (char tile : tiles.toCharArray()) {
            counter[tile - 'A']++;
        }
        backtrack(sequences, counter, "");
        return sequences.size();
    }

    private void backtrack(Set<String> sequences, int[] counter, String path) {
        if (!path.isEmpty()) {
            sequences.add(path);
        }
        for (int i = 0; i < counter.length; i++) {
            if (counter[i] > 0) {
                counter[i]--;
                backtrack(sequences, counter, path + (char) ('A' + i));
                counter[i]++;
            }
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.numTilePossibilities("AAB"));    // Output: 8
        System.out.println(solution.numTilePossibilities("AAABBC")); // Output: 188
        System.out.println(solution.numTilePossibilities("V"));      // Output: 1
    }
}
